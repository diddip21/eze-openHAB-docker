version: "2.2"

services:
  nginx: 
    image: nginx:latest
    container_name: nginx
    restart: always
    networks:
      - backbone
    volumes:
      - "${PWD}/nginx:/etc/nginx"
    ports:
      - 80:80
      - 443:443
  openhab:
    image: "openhab/openhab:latest"
    container_name: openhab
    restart: always
    networks:
      #- host
      - backbone
    volumes:
      # If you are on Windows delete the /etc/localtime and /etc/timezone lines
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "${PWD}/openhab_addons:/openhab/addons"
      - "${PWD}/openhab_conf:/openhab/conf"
      - "${PWD}/openhab_userdata:/openhab/userdata"
    environment:
      OPENHAB_HTTP_PORT: "8080"
      OPENHAB_HTTPS_PORT: "8443"
      USER_ID: ${UID}
      GROUP_ID: ${GID}
      EXTRA_JAVA_OPTS: "-Duser.timezone=Europe/Berlin"
    ports:
      - "8080:8080"
      - "8443:8443"
      - "5007:5007"
  frontail:
    image: welteki/frontail-openhab:latest
    container_name: frontail
    restart: always
    networks:
      - backbone
    ports:
      - "8081:9001"
    volumes:
      - "${PWD}/openhab_userdata/logs:/var/log/openhab2:ro"
    #command: "-p 8001 --ui-highlight --ui-highlight-preset /preset/openhab.json -t openhab /log/openhab.log /log/events.log"
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: always
    networks:
      - backbone
    ports:
      - "8083:8083"
      - "8086:8086"
      - "8090:8090"
      - "25826:25826/udp"
      - "2003:2003"
    env_file:
      # Check the file to set default password!
      - "${PWD}/env.influxdb"
    volumes:
      - "${PWD}/influxdb/data:/var/lib/influxdb/"
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    networks:
      - backbone
    user: "${UID}:${GID}"
    ports:
      - "3000:3000"
    env_file:
      - "${PWD}/env.grafana"
    volumes:
      - "${PWD}/grafana/data:/var/lib/grafana/"
  nodered:
    # If you are running on RaspBerryPi change the image to
    # nodered/node-red-docker:rpi
    image: nodered/node-red-docker:rpi
    container_name: nodered
    restart: always
    networks:
      - backbone
    user: root
    ports:
      - "1880:1880"
    volumes:
      - ./nodered:/data
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    restart: always
    networks:
      - backbone
    ports:
      - "1883:1883"
      - "1884:1884"
    volumes:
      - "${PWD}/mosquitto/conf:/mosquitto/config/"
      - "${PWD}/mosquitto/data/:/mosquitto/data/"
networks:
  backbone:
    driver: bridge